{
  "service": "template",
  "table": "templates",
  "description": "Test and example templates extracted from shell scripts and demo workflows",
  "dependencies": ["template.template_categories", "tenant.tenants"],
  "data": [
    {
      "id": "84567890-89ab-4def-8123-456789abcdef",
      "tenant_id": "__SYSTEM_TENANT__",
      "client_id": null,
      "category_id": null,
      "name": "Simple Go Struct",
      "display_name": "Simple Go Struct Template",
      "description": "Basic template for generating simple Go structs with JSON tags",
      "slug": "simple-go-struct",
      "content": "package {{.package}}\n\ntype {{.name}} struct {\n\tID   int    `json:\"id\"`\n\tName string `json:\"name\"`\n\tEmail string `json:\"email\"`\n}",
      "content_type": "handlebars",
      "language": "go",
      "framework": "standard",
      "template_type": "code",
      "version": "1.0.0",
      "major_version": 1,
      "minor_version": 0,
      "patch_version": 0,
      "is_latest_version": true,
      "is_global": true,
      "is_system_template": true,
      "is_active": true,
      "is_published": true,
      "is_draft": false,
      "complexity_level": "beginner",
      "estimated_time_minutes": 5,
      "usage_count": 0,
      "is_validated": true,
      "file_extension": ".go",
      "output_path": "internal/domain/{{.snake_case_name}}.go",
      "variables": {
        "package": {
          "type": "string",
          "description": "Go package name",
          "required": true,
          "example": "domain"
        },
        "name": {
          "type": "string",
          "description": "Struct name",
          "required": true,
          "example": "User"
        }
      },
      "configuration": {
        "supports_json": true,
        "supports_validation": false
      },
      "dependencies": [],
      "tags": ["go", "struct", "simple", "json", "basic"],
      "keywords": "go struct simple json tags basic",
      "created_at": "2024-01-01T12:00:00Z",
      "updated_at": "2024-01-01T12:00:00Z",
      "published_at": "2024-01-01T12:00:00Z"
    },
    {
      "id": "85678901-89ab-4def-8123-456789abcdef",
      "tenant_id": "__SYSTEM_TENANT__",
      "client_id": null,
      "category_id": null,
      "name": "User Entity with Validation",
      "display_name": "User Entity with Validation Template",
      "description": "Template for generating user entities with validation and time fields",
      "slug": "user-entity-validation",
      "content": "package {{.package}}\n\nimport (\n\t\"time\"\n\t\"errors\"\n)\n\n// {{.name}} represents a user entity\ntype {{.name}} struct {\n\tID        int       `json:\"id\" db:\"id\"`\n\tName      string    `json:\"name\" db:\"name\" validate:\"required\"`\n\tEmail     string    `json:\"email\" db:\"email\" validate:\"required,email\"`\n\tCreatedAt time.Time `json:\"created_at\" db:\"created_at\"`\n\tUpdatedAt time.Time `json:\"updated_at\" db:\"updated_at\"`\n}\n\n// Validate validates the {{.name}} struct\nfunc (u *{{.name}}) Validate() error {\n\tif u.Name == \"\" {\n\t\treturn errors.New(\"name is required\")\n\t}\n\tif u.Email == \"\" {\n\t\treturn errors.New(\"email is required\")\n\t}\n\treturn nil\n}",
      "content_type": "handlebars",
      "language": "go",
      "framework": "standard",
      "template_type": "code",
      "version": "1.0.0",
      "major_version": 1,
      "minor_version": 0,
      "patch_version": 0,
      "is_latest_version": true,
      "is_global": true,
      "is_system_template": true,
      "is_active": true,
      "is_published": true,
      "is_draft": false,
      "complexity_level": "beginner",
      "estimated_time_minutes": 10,
      "usage_count": 0,
      "is_validated": true,
      "file_extension": ".go",
      "output_path": "internal/domain/{{.snake_case_name}}.go",
      "variables": {
        "package": {
          "type": "string",
          "description": "Go package name",
          "required": true,
          "example": "domain"
        },
        "name": {
          "type": "string",
          "description": "Entity name",
          "required": true,
          "example": "User"
        }
      },
      "configuration": {
        "supports_validation": true,
        "supports_timestamps": true,
        "supports_database_tags": true
      },
      "dependencies": [],
      "tags": ["go", "entity", "validation", "user", "domain", "timestamps"],
      "keywords": "go entity validation user domain timestamps errors",
      "created_at": "2024-01-01T12:30:00Z",
      "updated_at": "2024-01-01T12:30:00Z",
      "published_at": "2024-01-01T12:30:00Z"
    },
    {
      "id": "86789012-89ab-4def-8123-456789abcdef",
      "tenant_id": "__SYSTEM_TENANT__",
      "client_id": null,
      "category_id": null,
      "name": "Basic User Service",
      "display_name": "Basic User Service Template",
      "description": "Template for generating basic user services with create functionality",
      "slug": "basic-user-service",
      "content": "package application\n\nimport (\n\t\"{{.ModuleName}}/internal/domain\"\n)\n\n// UserService handles user business logic\ntype UserService struct {\n\t// Add dependencies here\n}\n\n// NewUserService creates a new user service\nfunc NewUserService() *UserService {\n\treturn &UserService{}\n}\n\n// CreateUser creates a new user\nfunc (s *UserService) CreateUser(name, email string) (*domain.User, error) {\n\tuser := &domain.User{\n\t\tName:  name,\n\t\tEmail: email,\n\t}\n\t\n\tif err := user.Validate(); err != nil {\n\t\treturn nil, err\n\t}\n\t\n\treturn user, nil\n}",
      "content_type": "handlebars",
      "language": "go",
      "framework": "standard",
      "template_type": "code",
      "version": "1.0.0",
      "major_version": 1,
      "minor_version": 0,
      "patch_version": 0,
      "is_latest_version": true,
      "is_global": true,
      "is_system_template": true,
      "is_active": true,
      "is_published": true,
      "is_draft": false,
      "complexity_level": "beginner",
      "estimated_time_minutes": 8,
      "usage_count": 0,
      "is_validated": true,
      "file_extension": ".go",
      "output_path": "internal/application/{{.snake_case_name}}_service.go",
      "variables": {
        "ModuleName": {
          "type": "string",
          "description": "Go module name",
          "required": true,
          "example": "github.com/example/myapp"
        }
      },
      "configuration": {
        "supports_validation": true,
        "supports_business_logic": true
      },
      "dependencies": [],
      "tags": ["go", "service", "user", "application", "basic", "validation"],
      "keywords": "go service user application basic validation business logic",
      "created_at": "2024-01-01T13:00:00Z",
      "updated_at": "2024-01-01T13:00:00Z",
      "published_at": "2024-01-01T13:00:00Z"
    },
    {
      "id": "87890123-89ab-4def-8123-456789abcdef",
      "tenant_id": "__SYSTEM_TENANT__",
      "client_id": null,
      "category_id": null,
      "name": "Basic User Handler",
      "display_name": "Basic User Handler Template",
      "description": "Template for generating basic HTTP handlers for user operations",
      "slug": "basic-user-handler",
      "content": "package handlers\n\nimport (\n\t\"net/http\"\n\t\"github.com/gin-gonic/gin\"\n\t\"{{.ModuleName}}/internal/application\"\n)\n\n// UserHandler handles HTTP requests for users\ntype UserHandler struct {\n\tuserService *application.UserService\n}\n\n// NewUserHandler creates a new user handler\nfunc NewUserHandler(userService *application.UserService) *UserHandler {\n\treturn &UserHandler{\n\t\tuserService: userService,\n\t}\n}\n\n// CreateUser handles POST /users\nfunc (h *UserHandler) CreateUser(c *gin.Context) {\n\tvar req struct {\n\t\tName  string `json:\"name\" binding:\"required\"`\n\t\tEmail string `json:\"email\" binding:\"required,email\"`\n\t}\n\t\n\tif err := c.ShouldBindJSON(&req); err != nil {\n\t\tc.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n\t\treturn\n\t}\n\t\n\tuser, err := h.userService.CreateUser(req.Name, req.Email)\n\tif err != nil {\n\t\tc.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n\t\treturn\n\t}\n\t\n\tc.JSON(http.StatusCreated, user)\n}",
      "content_type": "handlebars",
      "language": "go",
      "framework": "gin",
      "template_type": "code",
      "version": "1.0.0",
      "major_version": 1,
      "minor_version": 0,
      "patch_version": 0,
      "is_latest_version": true,
      "is_global": true,
      "is_system_template": true,
      "is_active": true,
      "is_published": true,
      "is_draft": false,
      "complexity_level": "beginner",
      "estimated_time_minutes": 12,
      "usage_count": 0,
      "is_validated": true,
      "file_extension": ".go",
      "output_path": "internal/interfaces/http/handlers/{{.snake_case_name}}_handler.go",
      "variables": {
        "ModuleName": {
          "type": "string",
          "description": "Go module name",
          "required": true,
          "example": "github.com/example/myapp"
        }
      },
      "configuration": {
        "supports_validation": true,
        "supports_json": true,
        "supports_gin": true
      },
      "dependencies": ["github.com/gin-gonic/gin"],
      "tags": ["go", "handler", "user", "http", "gin", "basic", "json"],
      "keywords": "go handler user http gin basic json validation",
      "created_at": "2024-01-01T13:30:00Z",
      "updated_at": "2024-01-01T13:30:00Z",
      "published_at": "2024-01-01T13:30:00Z"
    }
  ]
}
